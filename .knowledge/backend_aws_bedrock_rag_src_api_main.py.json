{"is_source_file": true, "format": "Python", "description": "This file is a FastAPI backend for querying AWS Bedrock Agents. It defines data models for input and output, sets up the API endpoints, handles invocation of AWS Bedrock agents via boto3, and includes health check functionality.", "external_files": ["boto3"], "external_methods": ["boto3.client", "client.invoke_agent", "uuid.uuid4"], "published": ["app", "health_check", "query_agents"], "classes": [{"name": "AgentInput", "description": "Represents a single AWS Bedrock Agent selector with its metadata."}, {"name": "QueryAgentsRequest", "description": "Request payload for querying multiple AWS Bedrock Agents."}, {"name": "AgentResponse", "description": "Response for a single agent invocation."}, {"name": "QueryAgentsResponse", "description": "Aggregated response containing results for each agent."}], "methods": [{"name": "health_check()", "description": "Health check endpoint returning service status.", "scope": "", "scopeKind": ""}, {"name": "_get_bedrock_runtime_client(region: str)", "description": "Creates a boto3 client for AWS Bedrock in the specified region.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] _invoke_bedrock_agent(region: str, agent_id: str, alias_id: str, query: str)", "description": "Invokes a Bedrock agent using boto3 and returns the response payload.", "scope": "", "scopeKind": ""}, {"name": "QueryAgentsResponse query_agents(payload: QueryAgentsRequest)", "description": "Main API handler that processes the query request, invokes agents, and returns results.", "scope": "", "scopeKind": ""}], "calls": ["boto3.client", "client.invoke_agent", "uuid.uuid4"], "search-terms": ["AWS Bedrock", "agent invocation", "FastAPI", "query_agents endpoint", "boto3 Bedrock client", "AgentInput schema", "AgentResponse schema", "query payload"], "state": 2, "file_id": 3, "knowledge_revision": 10, "git_revision": "e0dc43503de2ce199d9142f72a3e132c23d53361", "revision_history": [{"9": "e0dc43503de2ce199d9142f72a3e132c23d53361"}, {"10": "e0dc43503de2ce199d9142f72a3e132c23d53361"}], "ctags": [{"_type": "tag", "name": "AgentInput", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89002/backend_aws_bedrock_rag/src/api/main.py", "pattern": "/^class AgentInput(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "AgentResponse", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89002/backend_aws_bedrock_rag/src/api/main.py", "pattern": "/^class AgentResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "QueryAgentsRequest", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89002/backend_aws_bedrock_rag/src/api/main.py", "pattern": "/^class QueryAgentsRequest(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "QueryAgentsResponse", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89002/backend_aws_bedrock_rag/src/api/main.py", "pattern": "/^class QueryAgentsResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_get_bedrock_runtime_client", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89002/backend_aws_bedrock_rag/src/api/main.py", "pattern": "/^def _get_bedrock_runtime_client(region: str):$/", "language": "Python", "kind": "function", "signature": "(region: str)"}, {"_type": "tag", "name": "_invoke_bedrock_agent", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89002/backend_aws_bedrock_rag/src/api/main.py", "pattern": "/^def _invoke_bedrock_agent(region: str, agent_id: str, alias_id: str, query: str) -> Dict[str, An/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(region: str, agent_id: str, alias_id: str, query: str)"}, {"_type": "tag", "name": "agent_id", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89002/backend_aws_bedrock_rag/src/api/main.py", "pattern": "/^    agent_id: constr(strip_whitespace=True, min_length=1) = Field(..., description=\"AWS Bedrock /", "language": "Python", "typeref": "typename:constr(strip_whitespace=True, min_length=1)", "kind": "variable", "scope": "AgentInput", "scopeKind": "class"}, {"_type": "tag", "name": "agent_id", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89002/backend_aws_bedrock_rag/src/api/main.py", "pattern": "/^    agent_id: str = Field(..., description=\"Agent ID echoed back.\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "AgentResponse", "scopeKind": "class"}, {"_type": "tag", "name": "agents", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89002/backend_aws_bedrock_rag/src/api/main.py", "pattern": "/^    agents: List[AgentInput] = Field(..., description=\"A list of agent descriptors to query.\")$/", "language": "Python", "typeref": "typename:List[AgentInput]", "kind": "variable", "scope": "QueryAgentsRequest", "scopeKind": "class"}, {"_type": "tag", "name": "alias_id", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89002/backend_aws_bedrock_rag/src/api/main.py", "pattern": "/^    alias_id: constr(strip_whitespace=True, min_length=1) = Field(..., description=\"AWS Bedrock /", "language": "Python", "typeref": "typename:constr(strip_whitespace=True, min_length=1)", "kind": "variable", "scope": "AgentInput", "scopeKind": "class"}, {"_type": "tag", "name": "alias_id", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89002/backend_aws_bedrock_rag/src/api/main.py", "pattern": "/^    alias_id: str = Field(..., description=\"Alias ID echoed back.\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "AgentResponse", "scopeKind": "class"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89002/backend_aws_bedrock_rag/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89002/backend_aws_bedrock_rag/src/api/main.py", "pattern": "/^    error: Optional[str] = Field(None, description=\"Error message if invocation failed.\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "AgentResponse", "scopeKind": "class"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89002/backend_aws_bedrock_rag/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "openapi_tags", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89002/backend_aws_bedrock_rag/src/api/main.py", "pattern": "/^openapi_tags = [$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "output", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89002/backend_aws_bedrock_rag/src/api/main.py", "pattern": "/^    output: Optional[Dict[str, Any]] = Field(None, description=\"Raw Bedrock response payload or /", "language": "Python", "typeref": "typename:Optional[Dict[str, Any]]", "kind": "variable", "scope": "AgentResponse", "scopeKind": "class"}, {"_type": "tag", "name": "query", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89002/backend_aws_bedrock_rag/src/api/main.py", "pattern": "/^    query: constr(strip_whitespace=True, min_length=1) = Field(..., description=\"The user questi/", "language": "Python", "typeref": "typename:constr(strip_whitespace=True, min_length=1)", "kind": "variable", "scope": "QueryAgentsRequest", "scopeKind": "class"}, {"_type": "tag", "name": "query", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89002/backend_aws_bedrock_rag/src/api/main.py", "pattern": "/^    query: str = Field(..., description=\"Original query string.\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "QueryAgentsResponse", "scopeKind": "class"}, {"_type": "tag", "name": "query_agents", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89002/backend_aws_bedrock_rag/src/api/main.py", "pattern": "/^def query_agents(payload: QueryAgentsRequest) -> QueryAgentsResponse:$/", "language": "Python", "typeref": "typename:QueryAgentsResponse", "kind": "function", "signature": "(payload: QueryAgentsRequest)"}, {"_type": "tag", "name": "region", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89002/backend_aws_bedrock_rag/src/api/main.py", "pattern": "/^    region: constr(strip_whitespace=True, min_length=1) = Field(..., description=\"AWS region whe/", "language": "Python", "typeref": "typename:constr(strip_whitespace=True, min_length=1)", "kind": "variable", "scope": "AgentInput", "scopeKind": "class"}, {"_type": "tag", "name": "region", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89002/backend_aws_bedrock_rag/src/api/main.py", "pattern": "/^    region: str = Field(..., description=\"Region echoed back.\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "AgentResponse", "scopeKind": "class"}, {"_type": "tag", "name": "results", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89002/backend_aws_bedrock_rag/src/api/main.py", "pattern": "/^    results: List[AgentResponse] = Field(..., description=\"Per-agent results including success\\//", "language": "Python", "typeref": "typename:List[AgentResponse]", "kind": "variable", "scope": "QueryAgentsResponse", "scopeKind": "class"}, {"_type": "tag", "name": "role", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89002/backend_aws_bedrock_rag/src/api/main.py", "pattern": "/^    role: constr(strip_whitespace=True, min_length=1) = Field(..., description=\"Human-readable r/", "language": "Python", "typeref": "typename:constr(strip_whitespace=True, min_length=1)", "kind": "variable", "scope": "AgentInput", "scopeKind": "class"}, {"_type": "tag", "name": "role", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89002/backend_aws_bedrock_rag/src/api/main.py", "pattern": "/^    role: str = Field(..., description=\"Agent role echoed back for context.\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "AgentResponse", "scopeKind": "class"}, {"_type": "tag", "name": "success", "path": "/home/kavia/workspace/code-generation/aws-bedrock-agent-query-platform-88993-89002/backend_aws_bedrock_rag/src/api/main.py", "pattern": "/^    success: bool = Field(..., description=\"Whether the Bedrock invocation succeeded.\")$/", "language": "Python", "typeref": "typename:bool", "kind": "variable", "scope": "AgentResponse", "scopeKind": "class"}], "hash": "71670cdfa607ade3eaa718ac9772b59c", "format-version": 4, "code-base-name": "backend_aws_bedrock_rag", "filename": "backend_aws_bedrock_rag/src/api/main.py", "fields": [{"name": "constr(strip_whitespace=True, min_length=1) agent_id", "scope": "AgentInput", "scopeKind": "class", "description": "unavailable"}, {"name": "str agent_id", "scope": "AgentResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "List[AgentInput] agents", "scope": "QueryAgentsRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "constr(strip_whitespace=True, min_length=1) alias_id", "scope": "AgentInput", "scopeKind": "class", "description": "unavailable"}, {"name": "str alias_id", "scope": "AgentResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[str] error", "scope": "AgentResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "openapi_tags = [", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[Dict[str, Any]] output", "scope": "AgentResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "constr(strip_whitespace=True, min_length=1) query", "scope": "QueryAgentsRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "str query", "scope": "QueryAgentsResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "constr(strip_whitespace=True, min_length=1) region", "scope": "AgentInput", "scopeKind": "class", "description": "unavailable"}, {"name": "str region", "scope": "AgentResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "List[AgentResponse] results", "scope": "QueryAgentsResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "constr(strip_whitespace=True, min_length=1) role", "scope": "AgentInput", "scopeKind": "class", "description": "unavailable"}, {"name": "str role", "scope": "AgentResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "bool success", "scope": "AgentResponse", "scopeKind": "class", "description": "unavailable"}]}